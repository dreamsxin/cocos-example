{"version":3,"sources":["../../../../assets/script/assets/script/touch.ts"],"names":[],"mappings":";;;;;AAAA,+BAAmC;AAE7B,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAA;AAGzC;IAAmC,yBAAY;IAD/C;QAAA,qEAyCC;QArCG,aAAO,GAAY,SAAS,CAAA;;IAqChC,CAAC;IAnCG,sBAAM,GAAN;QACG,IAAI,CAAC,aAAa,EAAE,CAAA;IACvB,CAAC;IAED,6BAAa,GAAb;QAAA,iBAcC;QAbG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,CAAsB;YAC7D,IAAI,UAAU,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAA;YACrC,IAAI,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;YAC9B,UAAU;YACV,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;YAChC,MAAM;YACN,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YAClC,QAAQ;YACR,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAA;YAC/C,kCAAkC;YAClC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAA;YACpC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAChC,CAAC,EAAE,IAAI,CAAC,CAAA;IACZ,CAAC;IAED,gCAAgB,GAAhB,UAAkB,KAAa;QAC3B,SAAS;QACT,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAU,CAAC,KAAK,CAAC,CAAA;SACtC;aAAM,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAU,CAAC,EAAE,CAAC,CAAA;SACnC;aAAM,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAU,CAAC,IAAI,CAAC,CAAA;SACrC;aAAM,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAU,CAAC,IAAI,CAAC,CAAA;SACrC;aAAM;YACH,EAAE,CAAC,KAAK,CAAC,6BAAO,KAAO,CAAC,CAAA;SAC3B;IACL,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACU;IAHX,KAAK;QADzB,OAAO;OACa,KAAK,CAwCzB;IAAD,YAAC;CAxCD,AAwCC,CAxCkC,EAAE,CAAC,SAAS,GAwC9C;kBAxCoB,KAAK","file":"","sourceRoot":"../../../../assets/script","sourcesContent":["import { TouchEvent } from \"./enum\"\n\nconst {ccclass, property} = cc._decorator\n\n@ccclass\nexport default class Touch extends cc.Component {\n\n    @property(cc.Node)\n    aimNode: cc.Node = undefined\n\n    onLoad () {\n       this.registerEvent()\n    }\n\n    registerEvent () {\n        this.node.on(cc.Node.EventType.TOUCH_END, (e: cc.Event.EventTouch) => {\n            let startPoint = e.getStartLocation()\n            let endPonit = e.getLocation()\n            // 起点与终点相减\n            let v = endPonit.sub(startPoint)\n            // 转弧度\n            let radians = Math.atan2(v.y, v.x)\n            // 弧度转角度\n            let degrees = cc.misc.radiansToDegrees(radians)\n            /** 将角度划分 8 块区域，方便处理，注意恰好 360 度 */\n            let index = Math.floor(degrees / 45)\n            this.emitEventByIndex(index)\n        }, this)\n    }\n\n    emitEventByIndex (index: number) {\n        // 8 方向判断\n        if (index === 0 || index === -1) {\n            this.aimNode.emit(TouchEvent.RIGHT)\n        } else if (index === 1 || index === 2) {\n            this.aimNode.emit(TouchEvent.UP)\n        } else if (index === -2 || index === -3) {\n            this.aimNode.emit(TouchEvent.DOWN)\n        } else if (index === -4 || index === 3 || index === 4) {\n            this.aimNode.emit(TouchEvent.LEFT)\n        } else {\n            cc.error(`无此方向${index}`)\n        }\n    }\n\n}\n"]}