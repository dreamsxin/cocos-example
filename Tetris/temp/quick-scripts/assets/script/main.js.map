{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/script","sourcesContent":["import { config } from \"./config\"\nimport Render from \"./render\"\nimport { TouchEvent, ItemColor, NodeUrl, MusicEvent } from \"./enum\"\n\nconst {ccclass, property} = cc._decorator\n\nexport interface CurrentShapeData {\n    /** 指向当前形状中心 */\n    center: cc.Vec2,\n    /** 当前形状翻转下标，0-3，可以翻转 4 种形态 */\n    index: number,\n    /** 什么颜色的方块 */\n    color: ItemColor\n}\n\n@ccclass\nexport default class Main extends cc.Component {\n\n    @property(Render)\n    renderClass: Render = undefined\n\n    @property(cc.Node)\n    startPanel: cc.Node = undefined\n\n    /** 二维数组 */\n    dataArray: ItemColor[][] = []\n\n    /** 当前形状 */\n    currentShape: CurrentShapeData = {\n        center: cc.v2(0, 0),\n        index: 0,\n        color: ItemColor.NULL\n    }\n\n    /** 计时变量 */\n    time: number = 0\n\n    /** 游戏进行开关 */\n    isOpen: boolean = false\n\n    onLoad () {\n        this.registerEvent()\n    }\n\n    start () {\n        // 游戏音乐 BGM\n        cc.find(NodeUrl.Music).emit(MusicEvent.BGM)\n    }\n\n    registerEvent () {\n        // touch 脚本传来上下左右事件，上：变形，下：下一个格子，左右：左右移动一个格子\n        this.node.on(TouchEvent.UP, () => {\n            this.changeCurrentShapeIndex()\n        }, this)\n\n        this.node.on(TouchEvent.DOWN, () => {\n            this.changeCurrentShapePos(cc.v2(1, 0))\n        }, this)\n\n        this.node.on(TouchEvent.LEFT, () => {\n            this.changeCurrentShapePos(cc.v2(0, -1))\n        }, this)\n\n        this.node.on(TouchEvent.RIGHT, () => {\n            this.changeCurrentShapePos(cc.v2(0, 1))\n        }, this)\n    }\n\n    /** 点击开始游戏按钮后触发 */\n    gameStart () {\n        this.startPanel.active = false\n        this.initData()\n        this.render()\n        this.randomOneShape()\n        this.isOpen = true\n    }\n\n    initData () {\n        for (let i = 0; i < config.row; i++) {\n            this.dataArray[i] = []\n            for (let j = 0; j < config.col; j++) {\n                this.dataArray[i][j] = ItemColor.NULL\n            }\n        }\n    }\n\n    /** 随机生成 */\n    randomOneShape () {\n        this.currentShape.center.set(config.startPos)\n        // 随机类型\n        this.currentShape.color = Math.floor(1 + 7 * Math.random())\n        // 随机开始的下标\n        this.currentShape.index = Math.floor(4 * Math.random())\n        // 检测游戏结束\n        if (this.isCurrentDataOK(this.currentShape)) {\n            this.setCurrentData(this.currentShape)\n        } else {\n            cc.warn('游戏结束')\n            this.isOpen = false\n            this.setCurrentData(this.currentShape)\n            cc.find(NodeUrl.Music).emit(MusicEvent.GAME_OVER)\n            this.scheduleOnce(() => {\n                // 显示游戏开始菜单\n                this.startPanel.active = true\n            }, 2)\n        }\n    }\n\n    /** 根据当前中心点和形状类型清除数据 */\n    clearCurrentData (currentShape: CurrentShapeData) {\n        const { center, color, index } = currentShape\n        const shape = `shape${color}`\n        const shapeData: cc.Vec2[][] = config[shape]\n        shapeData[index].forEach(ele => {\n            const row = center.x + ele.x\n            const col = center.y + ele.y\n            this.dataArray[row][col] = ItemColor.NULL\n        })\n    }\n\n    /** 根据当前中心点和形状类型加入数据 */\n    setCurrentData (currentShape: CurrentShapeData) {\n        const { center, color, index } = currentShape\n        const shape = `shape${color}`\n        const shapeData: cc.Vec2[][] = config[shape]\n        shapeData[index].forEach(ele => {\n            const row = center.x + ele.x\n            const col = center.y + ele.y\n            this.dataArray[row][col] = color\n        })\n        // 刷新视图\n        this.render()\n    }\n\n    /** 判断传入中心点和形状类型是否合理 */\n    isCurrentDataOK (currentShape: CurrentShapeData): boolean {\n        const { center, color, index } = currentShape\n        const shape = `shape${color}`\n        const shapeData: cc.Vec2[][] = config[shape]\n        const shapeIndexDate: cc.Vec2[] = shapeData[index]\n        for (let i = 0; i < shapeIndexDate.length; i++) {\n            const row = center.x + shapeIndexDate[i].x\n            if (row < 0 || row >= config.row) {\n                return false\n            }\n            const col = center.y + shapeIndexDate[i].y\n            if (col < 0 || col >= config.col) {\n                return false\n            }\n            if (this.dataArray[row][col] !== ItemColor.NULL) {\n                return false\n            }\n        }\n        return true\n    }\n\n    /** 操作变形逻辑 */\n    changeCurrentShapeIndex () {\n        this.clearCurrentData(this.currentShape)\n        this.currentShape.index += this.currentShape.index === 3 ? -3 : 1\n        if (this.isCurrentDataOK(this.currentShape)) {\n            this.setCurrentData(this.currentShape)\n            cc.find(NodeUrl.Music).emit(MusicEvent.ACTION)\n        } else {\n            cc.warn('操作不合理')\n            this.currentShape.index += this.currentShape.index === 0 ? 3 : -1\n        }\n    }\n\n    /** 操作逻辑 */\n    changeCurrentShapePos (v: cc.Vec2) {\n        this.clearCurrentData(this.currentShape)\n        this.currentShape.center.x += v.x\n        this.currentShape.center.y += v.y\n        if (this.isCurrentDataOK(this.currentShape)) {\n            this.setCurrentData(this.currentShape)\n        } else {\n            cc.warn('操作不合理')\n            this.currentShape.center.x -= v.x\n            this.currentShape.center.y -= v.y\n        }\n    }\n\n    /** 检测消除行 */\n    checkLines () {\n        // 从下往上，写一个 while 检测所有满的行\n        let row: number = config.row - 1\n        // 有消除\n        let isEliminated: boolean = false\n        while (row !== 0) {\n            let isFull: boolean = true\n            for (let j = 0; j < config.col; j++) {\n                if (this.dataArray[row][j] === ItemColor.NULL) {\n                    isFull = false\n                }\n            }\n            // 如果该行满了，消除本行，所有数据下移，再检测一次\n            if (isFull) {\n                isEliminated = true\n                for (let p = row; p > 0; p--) {\n                    for (let q = 0; q < config.col; q++) {\n                        this.dataArray[p][q] = this.dataArray[p - 1][q]\n                    }\n                }\n            } else {\n                row--\n            }\n        }\n        if (isEliminated) {\n            cc.find(NodeUrl.Music).emit(MusicEvent.ELIMINATE)\n        }\n    }\n\n    /** 自动下落逻辑 */\n    autoDown () {\n        this.clearCurrentData(this.currentShape)\n        this.currentShape.center.x += 1\n        if (this.isCurrentDataOK(this.currentShape)) {\n            this.setCurrentData(this.currentShape)\n        } else {\n            cc.warn('无法下移动，下一个')\n            this.currentShape.center.x -= 1\n            this.setCurrentData(this.currentShape)\n            // 消除逻辑\n            this.checkLines()\n            // 下一个形状\n            this.randomOneShape()\n        }\n    }\n\n    update (dt: number) {\n        if (!this.isOpen) {\n            return\n        }\n        this.time += dt\n        if (this.time > 1) {\n            this.time = 0\n            // 下落逻辑\n            this.autoDown()\n        }\n    }\n\n    /** 刷新视图 */\n    render () {\n        this.renderClass.render(this.dataArray)\n    }\n\n}\n"]}