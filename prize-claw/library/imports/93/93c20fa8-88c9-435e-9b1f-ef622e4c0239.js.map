{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "prefabs",
    "default",
    "type",
    "Prefab",
    "init",
    "main",
    "director",
    "getScene",
    "getChildByName",
    "getComponent",
    "last",
    "pool",
    "map",
    "instantiate",
    "item",
    "actions",
    "move",
    "moveBy",
    "getItem",
    "length",
    "splice",
    "Math",
    "random",
    "putItem",
    "stopAllActions",
    "removeFromParent",
    "push",
    "build",
    "list",
    "_pool",
    "concat",
    "game",
    "node",
    "children",
    "filter",
    "name",
    "i",
    "load",
    "gift",
    "Label",
    "string",
    "_goodsId",
    "id",
    "sprite",
    "Sprite",
    "loader",
    "img",
    "err",
    "texture",
    "console",
    "log",
    "spriteFrame",
    "SpriteFrame",
    "add",
    "x",
    "y",
    "_this",
    "parent",
    "addChild",
    "scale",
    "zIndex",
    "rotation",
    "_typeIndex",
    "runAction",
    "sequence",
    "clone",
    "callFunc",
    "check",
    "update",
    "onLoad"
  ],
  "mappings": ";;;;;kBAAeA,GAAGC,KAAH,CAAS;AACpBC,aAASF,GAAGG,SADQ;AAEpBC,gBAAY;AACRC,iBAAS;AACLC,qBAAS,EADJ;AAELC,kBAAMP,GAAGQ;AAFJ;AADD,KAFQ;;AASpBC,QAToB,kBASb;AACH;;;;AAIA,aAAKC,IAAL,GAAYV,GAAGW,QAAH,CAAYC,QAAZ,GACPC,cADO,CACQ,MADR,EACgBC,YADhB,CAC6B,MAD7B,CAAZ;;AAKA;AACA,aAAKC,IAAL,GAAY,IAAZ;;AAEA;;;;AAIA,aAAKC,IAAL,GAAY,KAAKX,OAAL,CAAaY,GAAb,CAAiB;AAAA,mBAAQjB,GAAGkB,WAAH,CAAeC,IAAf,CAAR;AAAA,SAAjB,CAAZ;;AAEA;AACA,aAAKC,OAAL,GAAe;AACXC,kBAAMrB,GAAGsB,MAAH,CAAU,CAAV,EAAa,GAAb,EAAkB,CAAlB;AADK,SAAf;AAKH,KAlCmB;AAoCpBC,WApCoB,qBAoCV;AACN,YAAI,KAAKP,IAAL,CAAUQ,MAAd,EAAsB;AAClB,mBAAO,KAAKR,IAAL,CAAUS,MAAV,CAAiB,CAAC,EAAEC,KAAKC,MAAL,KAAgB,KAAKX,IAAL,CAAUQ,MAA5B,CAAlB,EAAuD,CAAvD,EAA0D,CAA1D,CAAP;AACH,SAFD,MAEO,OAAO,IAAP;AACV,KAxCmB;AA0CpBI,WA1CoB,mBA0CZT,IA1CY,EA0CN;AACVA,aAAKU,cAAL;AACAV,aAAKW,gBAAL;AACA,aAAKd,IAAL,CAAUe,IAAV,CAAeZ,IAAf;AACH,KA9CmB;;;AAgDpB;;;AAGAa,SAnDoB,iBAmDdC,IAnDc,EAmDR;AAAA;;AACR,YAAMC,QAAQ,KAAKlB,IAAL,CAAUmB,MAAV,CAAiB,KAAKzB,IAAL,CAAU0B,IAAV,CAAeC,IAAf,CAAoBC,QAApB,CAA6BC,MAA7B,CAAoC,gBAAQ;AACvE,gBAAIpB,KAAKqB,IAAL,KAAc,MAAlB,EAA0B;AACtB;AACA,uBAAO,IAAP;AACH;AACJ,SAL8B,CAAjB,CAAd;;AAOA;;;;AAIA,YAAIC,IAAI,CAAR;;AAEA,YAAMC,OAAO,SAAPA,IAAO,GAAM;AACf,gBAAMvB,OAAOc,KAAKQ,CAAL,CAAb;AACA,gBAAIE,OAAOT,MAAMO,CAAN,CAAX;AACA,gBAAI,CAACE,IAAL,EAAW;AACPA,uBAAO3C,GAAGkB,WAAH,CAAe,OAAKb,OAAL,CAAa,CAAb,CAAf,CAAP;AACA,uBAAKuB,OAAL,CAAae,IAAb;AAEH;;AAED;AACA,gBAAIxB,KAAKZ,IAAL,KAAc,CAAlB,EAAqB;AACjB;AACA;AACH,aAHD,MAGO;AACHoC,qBAAK9B,cAAL,CAAoB,MAApB,EACKC,YADL,CACkBd,GAAG4C,KADrB,EAC4BC,MAD5B,GACqC,EADrC;AAEH;;AAEDF,iBAAKG,QAAL,GAAgB3B,KAAK4B,EAArB;;AAEA,gBAAMC,SAASL,KAAK7B,YAAL,CAAkBd,GAAGiD,MAArB,CAAf;AACAjD,eAAGkD,MAAH,CAAUR,IAAV,CAAevB,KAAKgC,GAApB,EAAyB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvC,oBAAID,GAAJ,EAASE,QAAQC,GAAR,CAAYH,GAAZ,EAAT,KACKJ,OAAOQ,WAAP,GAAqB,IAAIxD,GAAGyD,WAAP,CAAmBJ,OAAnB,CAArB;AACL,oBAAI,EAAEZ,CAAF,GAAMR,KAAKT,MAAf,EAAuBkB;AAC1B,aAJD;AAKH,SA1BD;AA2BAA;AACH,KA7FmB;;;AA+FpB;;;;;;AAMAgB,OArGoB,iBAqGA;AAAA,YAAhBC,CAAgB,uEAAd,CAAC,GAAa;AAAA,YAARC,CAAQ,uEAAN,CAAC,GAAK;;AAChB;;;;AAIA,YACInB,IAAI,CAAC,EAAEf,KAAKC,MAAL,KAAgB,KAAKtB,OAAL,CAAamB,MAA/B,CADT;AAAA,YAEIqC,QAAQ,IAFZ;AAGA,aAAK9C,IAAL,GAAY,KAAKQ,OAAL,MAAkBvB,GAAGkB,WAAH,CAAe,KAAKb,OAAL,CAAaoC,CAAb,CAAf,CAA9B;AACA,aAAK1B,IAAL,CAAUc,cAAV;;AAEA,aAAKQ,IAAL,CAAUyB,MAAV,CAAiBjD,cAAjB,CAAgC,MAAhC,EACKkD,QADL,CACc,KAAKhD,IADnB;AAEA,aAAKA,IAAL,CAAUyB,IAAV,GAAiB,MAAjB;AACA,aAAKzB,IAAL,CAAU4C,CAAV,GAAcA,CAAd;AACA,aAAK5C,IAAL,CAAU6C,CAAV,GAAcA,CAAd;AACA,aAAK7C,IAAL,CAAUiD,KAAV,GAAkB,CAAlB;AACA,aAAKjD,IAAL,CAAUkD,MAAV,GAAmB,CAAnB;AACA,aAAKlD,IAAL,CAAUmD,QAAV,GAAqB,CAArB;AACA,aAAKnD,IAAL,CAAUoD,UAAV,GAAuB1B,CAAvB;;AAEA,aAAK1B,IAAL,CAAUqD,SAAV,CAAoBpE,GAAGqE,QAAH,CAChB,KAAKjD,OAAL,CAAaC,IAAb,CAAkBiD,KAAlB,EADgB,EAEhBtE,GAAGuE,QAAH,CAAY,YAAW;AACnBV,kBAAMjC,OAAN,CAAc,IAAd;AACH,SAFD,EAEG,KAAKb,IAFR,CAFgB,CAApB;AAMH,KAhImB;AAoIpByD,SApIoB,mBAoIZ;AACJ,YAAI,KAAKzD,IAAL,IAAa,KAAKA,IAAL,CAAU4C,CAAV,GAAc,CAAC,GAAhC,EAAqC,KAAKD,GAAL;AACxC,KAtImB;AAwIpBe,UAxIoB,oBAwIX;AACL,aAAKD,KAAL;AACH,KA1ImB;AA4IpBE,UA5IoB,oBA4IX;AACL,aAAKjE,IAAL;AACA,aAAKiD,GAAL;AACH;AA/ImB,CAAT,C",
  "file": "unknown",
  "sourcesContent": [
    "export default cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        prefabs: {\r\n            default: [],\r\n            type: cc.Prefab\r\n        }\r\n    },\r\n\r\n    init() {\r\n        /*\r\n        * 初始化时\r\n        * 获取 main 组件\r\n        */\r\n        this.main = cc.director.getScene()\r\n            .getChildByName('main').getComponent('main')\r\n\r\n\r\n\r\n        // 上一个添加的 gift\r\n        this.last = null\r\n\r\n        /*\r\n        * gift pool\r\n        * 每种 gift 对应一个 pool\r\n        */\r\n        this.pool = this.prefabs.map(item => cc.instantiate(item))\r\n\r\n        // 预定义 action\r\n        this.actions = {\r\n            move: cc.moveBy(5, 888, 0)\r\n        }\r\n\r\n\r\n    },\r\n\r\n    getItem() {\r\n        if (this.pool.length) {\r\n            return this.pool.splice(~~(Math.random() * this.pool.length), 1)[0]\r\n        } else return null\r\n    },\r\n\r\n    putItem(item) {\r\n        item.stopAllActions()\r\n        item.removeFromParent()\r\n        this.pool.push(item)\r\n    },\r\n\r\n    /*\r\n    * @param {array} goodsList\r\n    */\r\n    build(list) {\r\n        const _pool = this.pool.concat(this.main.game.node.children.filter(item => {\r\n            if (item.name === 'gift') {\r\n                // item.stopAllActions()\r\n                return true\r\n            }\r\n        }))\r\n\r\n        /*\r\n        * 遍历 list\r\n        * 最终 pool 的个数以 list 为准\r\n        */\r\n        let i = 0\r\n\r\n        const load = () => {\r\n            const item = list[i]\r\n            let gift = _pool[i]\r\n            if (!gift) {\r\n                gift = cc.instantiate(this.prefabs[0])\r\n                this.putItem(gift)\r\n\r\n            }\r\n\r\n            // 判断奖品类型\r\n            if (item.type === 0) {\r\n                // gift.getChildByName('text')\r\n                //     .getComponent(cc.Label).string = item.name.match(/\\d+/)[0]\r\n            } else {\r\n                gift.getChildByName('text')\r\n                    .getComponent(cc.Label).string = ''\r\n            }\r\n\r\n            gift._goodsId = item.id\r\n\r\n            const sprite = gift.getComponent(cc.Sprite)\r\n            cc.loader.load(item.img, (err, texture) => {\r\n                if (err) console.log(err)\r\n                else sprite.spriteFrame = new cc.SpriteFrame(texture)\r\n                if (++i < list.length) load()\r\n            })\r\n        }\r\n        load()\r\n    },\r\n\r\n    /*\r\n    * 添加 gift\r\n    * 默认位置 屏幕左侧\r\n    * @param {number} x: -441\r\n    * @param {number} y: -250\r\n    */\r\n    add(x=-441, y=-250) {\r\n        /*\r\n        * 默认情况下\r\n        * 展示奖品\r\n        */\r\n        const\r\n            i = ~~(Math.random() * this.prefabs.length),\r\n            _this = this\r\n        this.last = this.getItem() || cc.instantiate(this.prefabs[i])\r\n        this.last.stopAllActions()\r\n\r\n        this.node.parent.getChildByName('game')\r\n            .addChild(this.last)\r\n        this.last.name = 'gift'\r\n        this.last.x = x\r\n        this.last.y = y\r\n        this.last.scale = 1\r\n        this.last.zIndex = 2\r\n        this.last.rotation = 0\r\n        this.last._typeIndex = i\r\n\r\n        this.last.runAction(cc.sequence(\r\n            this.actions.move.clone(),\r\n            cc.callFunc(function() {\r\n                _this.putItem(this)\r\n            }, this.last)\r\n        ))\r\n    },\r\n\r\n\r\n\r\n    check() {\r\n        if (this.last && this.last.x > -182) this.add()\r\n    },\r\n\r\n    update() {\r\n        this.check()\r\n    },\r\n\r\n    onLoad() {\r\n        this.init()\r\n        this.add()\r\n    }\r\n})\r\n"
  ]
}