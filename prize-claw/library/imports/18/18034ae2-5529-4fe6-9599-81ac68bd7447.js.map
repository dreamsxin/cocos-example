{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "onCollisionEnter",
    "other",
    "self",
    "window",
    "_main",
    "game",
    "claw",
    "state",
    "node",
    "name",
    "catched",
    "checkLeft",
    "checkRight",
    "console",
    "error",
    "gift",
    "onCollisionStay",
    "pos",
    "convertToWorldSpace",
    "delta",
    "x"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,oBAHK,4BAGYC,KAHZ,EAGmBC,IAHnB,EAGyB;AAC1B;;;;AAIA,YAAIC,OAAOC,KAAP,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBC,KAAvB,KAAiC,MAArC,EAA6C;AAC7C,YAAIL,KAAKM,IAAL,CAAUC,IAAV,KAAmB,MAAvB,EAA+B;AAC3BN,mBAAOC,KAAP,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBI,OAAvB,GAAiC,KAAKC,SAAL,CAAeV,KAAf,EAAsBC,IAAtB,CAAjC;AACH,SAFD,MAEO,IAAIA,KAAKM,IAAL,CAAUC,IAAV,KAAmB,OAAvB,EAAgC;AACnCN,mBAAOC,KAAP,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBI,OAAvB,GAAiC,KAAKE,UAAL,CAAgBX,KAAhB,EAAuBC,IAAvB,CAAjC;AACH,SAFM,MAEAW,QAAQC,KAAR,CAAc,UAAd;;AAEP,YAAIX,OAAOC,KAAP,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBI,OAA3B,EAAoC;AAChCP,mBAAOC,KAAP,CAAaC,IAAb,CAAkBC,IAAlB,CAAuBS,IAAvB,GAA8Bd,MAAMO,IAApC;AACH;AACJ,KAlBI;AAmBLQ,mBAnBK,2BAmBWf,KAnBX,EAmBkBC,IAnBlB,EAmBwB,CAE5B,CArBI;AAsBLS,aAtBK,qBAsBKI,IAtBL,EAsBWT,IAtBX,EAsBiB;AAClB;AACA,YAAMW,MAAM;AACRF,kBAAMA,KAAKP,IAAL,CAAUU,mBAAV,CAA8B,CAA9B,EAAiC,CAAjC,CADE;AAERZ,kBAAMA,KAAKE,IAAL,CAAUU,mBAAV,CAA8B,CAA9B,EAAiC,CAAjC;AAFE,SAAZ;;AAKA,YAAMC,QAAQF,IAAIF,IAAJ,CAASK,CAAT,GAAaH,IAAIX,IAAJ,CAASc,CAApC;;AAEA,YAAID,QAAQ,EAAZ,EAAgB,OAAO,IAAP;AAChB,eAAO,KAAP;AACH,KAjCI;AAkCLP,cAlCK,sBAkCMG,IAlCN,EAkCYT,IAlCZ,EAkCkB;AACnB;AACA,YAAMW,MAAM;AACRF,kBAAMA,KAAKP,IAAL,CAAUU,mBAAV,CAA8B,CAA9B,EAAiC,CAAjC,CADE;AAERZ,kBAAMA,KAAKE,IAAL,CAAUU,mBAAV,CAA8B,CAA9B,EAAiC,CAAjC;AAFE,SAAZ;;AAKA,YAAMC,QAAQF,IAAIX,IAAJ,CAASc,CAAT,GAAaH,IAAIF,IAAJ,CAASK,CAApC;;AAEA,YAAID,QAAQ,EAAZ,EAAgB,OAAO,IAAP;;AAEhB,eAAO,KAAP;AACH;AA9CI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    onCollisionEnter(other, self) {\r\n        /* 检测爪子状态\r\n        * 非 grab 状态\r\n        * 不作碰撞处理\r\n        */\r\n        if (window._main.game.claw.state !== 'grab') return\r\n        if (self.node.name === 'left') {\r\n            window._main.game.claw.catched = this.checkLeft(other, self)\r\n        } else if (self.node.name === 'right') {\r\n            window._main.game.claw.catched = this.checkRight(other, self)\r\n        } else console.error('请检查组件名设置')\r\n\r\n        if (window._main.game.claw.catched) {\r\n            window._main.game.claw.gift = other.node\r\n        }\r\n    },\r\n    onCollisionStay(other, self) {\r\n\r\n    },\r\n    checkLeft(gift, claw) {\r\n        // 转成世界坐标\r\n        const pos = {\r\n            gift: gift.node.convertToWorldSpace(0, 0),\r\n            claw: claw.node.convertToWorldSpace(0, 0)\r\n        }\r\n\r\n        const delta = pos.gift.x - pos.claw.x\r\n\r\n        if (delta > 20) return true\r\n        return false\r\n    },\r\n    checkRight(gift, claw) {\r\n        // 转成世界坐标\r\n        const pos = {\r\n            gift: gift.node.convertToWorldSpace(0, 0),\r\n            claw: claw.node.convertToWorldSpace(0, 0)\r\n        }\r\n\r\n        const delta = pos.claw.x - pos.gift.x\r\n\r\n        if (delta > 10) return true\r\n\r\n        return false\r\n    }\r\n})\r\n"
  ]
}