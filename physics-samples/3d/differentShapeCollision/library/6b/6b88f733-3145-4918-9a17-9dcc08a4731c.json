{
  "__type__": "cc.EffectAsset",
  "_name": "builtin-effect-matcap",
  "_objFlags": 0,
  "_native": "",
  "techniques": [
    {
      "queue": 0,
      "lod": 100,
      "passes": [
        {
          "stage": 1,
          "depthTest": true,
          "depthWrite": true,
          "program": "4056d355de91bbd7170d9278759319dfad8dcd4a26c27a2790bee69c"
        }
      ],
      "priority": 0
    }
  ],
  "properties": {
    "mainTex": {
      "type": 13,
      "value": null
    },
    "matcapTex": {
      "type": 13,
      "value": null
    },
    "colorFactor": {
      "type": 4,
      "value": 0.5
    },
    "color": {
      "type": 9,
      "value": [
        1,
        1,
        1,
        1
      ]
    }
  },
  "shaders": [
    {
      "vert": "\n  attribute vec3 a_position;\n  attribute vec3 a_normal;\n  uniform   mat4 _model;\n  uniform   mat4 _viewProj;\n  uniform   mat3 _normalMatrix;\n  varying   vec2 matcapUV;\n\n  #if USE_MAIN_TEX\n    attribute vec2 a_uv0;\n    varying   vec2 uv0;\n  #endif\n\n  #if _USE_SKINNING\n    \n\nattribute vec4 a_weights;\nattribute vec4 a_joints;\n\n#if _USE_JOINTS_TEXTURE\nuniform sampler2D _u_jointsTexture;\nuniform float _u_jointsTextureSize;\n\nmat4 getBoneMatrix(const in float i) {\n  float size = _u_jointsTextureSize;\n  float j = i * 4.0;\n  float x = mod(j, size);\n  float y = floor(j / size);\n\n  float dx = 1.0 / size;\n  float dy = 1.0 / size;\n\n  y = dy * (y + 0.5);\n\n  vec4 v1 = texture2D(_u_jointsTexture, vec2(dx * (x + 0.5), y));\n  vec4 v2 = texture2D(_u_jointsTexture, vec2(dx * (x + 1.5), y));\n  vec4 v3 = texture2D(_u_jointsTexture, vec2(dx * (x + 2.5), y));\n  vec4 v4 = texture2D(_u_jointsTexture, vec2(dx * (x + 3.5), y));\n\n  return mat4(v1, v2, v3, v4);\n}\n#else\nuniform mat4 _u_jointMatrices[128];\n\nmat4 getBoneMatrix(const in float i) {\n  return _u_jointMatrices[int(i)];\n}\n#endif\n\nmat4 skinMatrix() {\n  return\n    getBoneMatrix(a_joints.x) * a_weights.x +\n    getBoneMatrix(a_joints.y) * a_weights.y +\n    getBoneMatrix(a_joints.z) * a_weights.z +\n    getBoneMatrix(a_joints.w) * a_weights.w\n    ;\n}\n\nvoid skinVertex(inout vec4 a1) {\n  mat4 m = skinMatrix();\n  a1 = m * a1;\n}\n\nvoid skinVertex(inout vec4 a1, inout vec4 a2) {\n  mat4 m = skinMatrix();\n  a1 = m * a1;\n  a2 = m * a2;\n}\n\nvoid skinVertex(inout vec4 a1, inout vec4 a2, inout vec4 a3) {\n  mat4 m = skinMatrix();\n  a1 = m * a1;\n  a2 = m * a2;\n  a3 = m * a3;\n}\n\n  #endif\n\n  void main(void){\n    vec4 pos = vec4(a_position, 1);\n    vec4 normal = vec4(a_normal, 0);\n\n    #if _USE_SKINNING\n      skinVertex(pos, normal);\n    #endif\n\n    pos = _viewProj * _model * pos;\n    normal = vec4(normalize(_normalMatrix * normal.xyz), 0);\n    gl_Position = pos;\n\n    matcapUV = normal.xy;\n    matcapUV = matcapUV * 0.5 + 0.5;\n\n    #if USE_MAIN_TEX\n      uv0 = a_uv0;\n    #endif\n  }\n",
      "frag": "\n  uniform sampler2D matcapTex;\n  uniform float colorFactor;\n  uniform vec4 color;\n  varying vec2 matcapUV;\n\n  #if USE_MAIN_TEX\n    varying vec2 uv0;\n    uniform sampler2D mainTex;\n  #endif\n\n  void main(void){\n    vec4 col = vec4(1, 1, 1, 1);\n    col *= color;\n    #if USE_MAIN_TEX\n      col *= texture2D(mainTex, uv0);\n    #endif\n    vec4 matcapColor = texture2D(matcapTex, matcapUV);\n    gl_FragColor = col * colorFactor + matcapColor * (1.0 - colorFactor);\n  }\n",
      "defines": [
        {
          "name": "USE_MAIN_TEX",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "_USE_SKINNING",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "_USE_JOINTS_TEXTURE",
          "type": "boolean",
          "defines": [
            "_USE_SKINNING"
          ]
        }
      ],
      "uniforms": [
        {
          "name": "matcapTex",
          "type": 13,
          "defines": []
        },
        {
          "name": "colorFactor",
          "type": 4,
          "defines": []
        },
        {
          "name": "color",
          "type": 7,
          "defines": []
        },
        {
          "name": "mainTex",
          "type": 13,
          "defines": [
            "USE_MAIN_TEX"
          ]
        }
      ],
      "attributes": [
        {
          "name": "a_position",
          "type": 6,
          "defines": []
        },
        {
          "name": "a_normal",
          "type": 6,
          "defines": []
        },
        {
          "name": "a_uv0",
          "type": 5,
          "defines": [
            "USE_MAIN_TEX"
          ]
        },
        {
          "name": "a_weights",
          "type": 7,
          "defines": [
            "_USE_SKINNING"
          ]
        },
        {
          "name": "a_joints",
          "type": 7,
          "defines": [
            "_USE_SKINNING"
          ]
        }
      ],
      "extensions": [],
      "name": "4056d355de91bbd7170d9278759319dfad8dcd4a26c27a2790bee69c"
    }
  ]
}