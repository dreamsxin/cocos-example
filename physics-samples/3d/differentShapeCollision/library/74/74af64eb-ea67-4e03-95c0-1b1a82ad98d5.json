{
  "__type__": "cc.EffectAsset",
  "_name": "builtin-effect-particle-add-smooth",
  "_objFlags": 0,
  "_native": "",
  "techniques": [
    {
      "queue": 1,
      "passes": [
        {
          "stage": 1,
          "cullMode": 0,
          "depthTest": true,
          "depthWrite": false,
          "blend": true,
          "blendEq": 32774,
          "blendSrc": 1,
          "blendDst": 769,
          "blendAlphaEq": 32774,
          "blendSrcAlpha": 1,
          "blendDstAlpha": 769,
          "program": "b437a98c0ac54f4b8db54391e6aa0d5d9f8879c7691c76c741e6aae8"
        }
      ],
      "priority": 0
    }
  ],
  "properties": {
    "mainTexture": {
      "type": 13,
      "value": null
    },
    "mainTiling": {
      "type": 5,
      "value": [
        1,
        1
      ]
    },
    "mainOffset": {
      "type": 5,
      "value": [
        0,
        0
      ]
    },
    "frameTile": {
      "type": 5,
      "value": [
        1,
        1
      ]
    },
    "velocityScale": {
      "type": 4,
      "value": 0
    },
    "lengthScale": {
      "type": 4,
      "value": 0
    }
  },
  "shaders": [
    {
      "vert": "\nuniform vec2 frameTile;\nuniform vec2 mainTiling;\nuniform vec2 mainOffset;\nuniform mat4 _model;\nuniform mat4 _viewProj;\nuniform mat4 _view;\n\n#if USE_STRETCHED_BILLBOARD\n  uniform vec3 _eye;\n  uniform float velocityScale;\n  uniform float lengthScale;\n#endif\n\nvarying vec2 uv;\nvarying vec4 color;\n\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset\n#if USE_BILLBOARD || USE_VERTICAL_BILLBOARD\n  , mat4 view\n#endif\n#if USE_STRETCHED_BILLBOARD\n  , vec3 _eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float size\n  , float xIndex\n#endif\n) {\n#if USE_BILLBOARD\n  vec3 camRight = normalize(vec3(view[0][0], view[1][0], view[2][0]));\n  vec3 camUp = normalize(vec3(view[0][1], view[1][1], view[2][1]));\n  pos.xyz += (camRight * vertOffset.x) + (camUp * vertOffset.y);\n#elif USE_STRETCHED_BILLBOARD\n  vec3 camRight = normalize(cross(pos.xyz - _eye, velocity.xyz));\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * size;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif USE_HORIZONTAL_BILLBOARD\n  vec3 camRight = vec3(1, 0, 0);\n  vec3 camUp = vec3(0, 0, -1);\n  pos.xyz += (camRight * vertOffset.x) + (camUp * vertOffset.y);\n#elif USE_VERTICAL_BILLBOARD\n  vec3 camRight = normalize(vec3(view[0][0], view[1][0], view[2][0]));\n  vec3 camUp = vec3(0, 1, 0);\n  pos.xyz += (camRight * vertOffset.x) + (camUp * vertOffset.y);\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\n\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile) {\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n  aniUV.y = frameTile.y - aniUV.y - 1.0;\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\n\nvoid rotateCorner(inout vec2 corner, float angle) {\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\n\nattribute vec3 a_position; \nattribute vec3 a_uv;  \nattribute vec2 a_uv0; \nattribute vec4 a_color;\n#if USE_STRETCHED_BILLBOARD\nattribute vec3 a_color0; \n#endif\n\n\nvoid lpvs_main() {\n  vec4 pos = vec4(a_position, 1);\n#if USE_STRETCHED_BILLBOARD\n  vec4 velocity = vec4(a_color0.xyz, 0);\n#endif\n\n#if !USE_WORLD_SPACE\n\n\n  pos = _model * pos;\n  #if USE_STRETCHED_BILLBOARD\n  velocity = _model * velocity;\n  #endif\n#endif\n\n  vec2 cornerOffset = vec2((a_uv.xy - 0.5) * a_uv0.x);\n#if !USE_STRETCHED_BILLBOARD\n\n\n  \n  rotateCorner(cornerOffset, a_uv0.y);\n#endif\n\n  computeVertPos(pos, cornerOffset\n  #if USE_BILLBOARD || USE_VERTICAL_BILLBOARD\n    , _view\n  #endif\n  #if USE_STRETCHED_BILLBOARD\n    , _eye\n    , velocity\n    , velocityScale\n    , lengthScale\n    , a_uv0.x\n    , a_uv.x\n  #endif\n  );\n\n  pos = _viewProj * pos;\n\n  uv = computeUV(a_uv.z, a_uv.xy, frameTile) * mainTiling + mainOffset;\n\n  color = a_color;\n\n  gl_Position = pos;\n}\n\nvoid main() { gl_Position = lpvs_main(); }\n",
      "frag": "\n  uniform sampler2D mainTexture;\n\n  varying vec2 uv;\n  varying vec4 color;\n\n  void main () {\n    \n    vec4 col = color * texture2D(mainTexture, uv);\n    col.rgb *= col.a;\n    gl_FragColor = col;\n  }\n",
      "defines": [
        {
          "name": "USE_STRETCHED_BILLBOARD",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_BILLBOARD",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_HORIZONTAL_BILLBOARD",
          "type": "boolean",
          "defines": []
        },
        {
          "name": "USE_VERTICAL_BILLBOARD",
          "type": "boolean",
          "defines": []
        }
      ],
      "uniforms": [
        {
          "name": "frameTile",
          "type": 5,
          "defines": []
        },
        {
          "name": "mainTiling",
          "type": 5,
          "defines": []
        },
        {
          "name": "mainOffset",
          "type": 5,
          "defines": []
        },
        {
          "name": "velocityScale",
          "type": 4,
          "defines": [
            "USE_STRETCHED_BILLBOARD"
          ]
        },
        {
          "name": "lengthScale",
          "type": 4,
          "defines": [
            "USE_STRETCHED_BILLBOARD"
          ]
        },
        {
          "name": "mainTexture",
          "type": 13,
          "defines": []
        }
      ],
      "attributes": [
        {
          "name": "a_position",
          "type": 6,
          "defines": []
        },
        {
          "name": "a_uv",
          "type": 6,
          "defines": []
        },
        {
          "name": "a_uv0",
          "type": 5,
          "defines": []
        },
        {
          "name": "a_color",
          "type": 7,
          "defines": []
        },
        {
          "name": "a_color0",
          "type": 6,
          "defines": [
            "USE_STRETCHED_BILLBOARD"
          ]
        }
      ],
      "extensions": [],
      "name": "b437a98c0ac54f4b8db54391e6aa0d5d9f8879c7691c76c741e6aae8"
    }
  ]
}