{"version":3,"sources":["../../../../assets/scripts/assets/scripts/request.js"],"names":["request","method","app","kf","JSON","parse","getHeadParams","imei","url","headers","data","Promise","resolve","reject","xhr","XMLHttpRequest","withCredentials","onreadystatechange","readyState","status","response","responseText","res","resultCode","resultMsg","open","setRequestHeader","keys","Object","getOwnPropertyNames","forEach","key","send","stringify","get","post"],"mappings":";;;;;;;;;;;;AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACrB;AACA,QAAIC,MAAM,IAAV;AACA,QAAI,QAAOC,EAAP,yCAAOA,EAAP,OAAc,QAAlB,EAA4B;AACxBD,cAAME,KAAKC,KAAL,CAAWF,GAAGG,aAAH,EAAX,CAAN;AACH,KAFD,MAEO;AACHJ,cAAM;AACFK,kBAAM;AACN;AAFE,SAAN;AAIH;AACD,WAAO,UAASC,GAAT,EAAkC;AAAA,YAApBC,OAAoB,uEAAV,EAAU;AAAA,YAANC,IAAM;;AACrC,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAMC,MAAM,IAAIC,cAAJ,EAAZ;AACAD,gBAAIE,eAAJ,GAAsB,IAAtB;AACAF,gBAAIG,kBAAJ,GAAyB,YAAY;AACjC,oBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,wBAAIJ,IAAIK,MAAJ,KAAe,GAAnB,EAAwB;AACpB,4BAAIC,WAAWN,IAAIO,YAAnB;AACA,4BAAIC,MAAMlB,KAAKC,KAAL,CAAWe,QAAX,CAAV;AACA,4BAAIE,IAAIC,UAAJ,KAAmB,CAAvB,EAA0B;AACtBX,oCAAQU,GAAR;AACH,yBAFD,MAEO;AACHT,mCAAOS,IAAIE,SAAX;AACH;AACJ,qBARD,MAQO;AACHX,+BAAOC,IAAIO,YAAX;AACH;AACJ;AACJ,aAdD;AAeAP,gBAAIW,IAAJ,CAASxB,MAAT,EAAiBO,GAAjB,EAAsB,IAAtB;AACAM,gBAAIY,gBAAJ,CAAqB,MAArB,EAA6BxB,IAAIK,IAAjC;AACA,gBAAIoB,OAAOC,OAAOC,mBAAP,CAA2BpB,OAA3B,CAAX;AACAkB,iBAAKG,OAAL,CAAa,eAAO;AAChBhB,oBAAIY,gBAAJ,CAAqBK,GAArB,EAA0BtB,QAAQsB,GAAR,CAA1B;AACH,aAFD;;AAIA,gBAAIrB,IAAJ,EAAU;AACNI,oBAAIkB,IAAJ,CAAS5B,KAAK6B,SAAL,CAAevB,IAAf,CAAT;AACH,aAFD,MAEO;AACHI,oBAAIkB,IAAJ;AACH;AACJ,SA9BM,CAAP;AA+BH,KAhCD;AAiCH;;kBAEc;AACXE,SAAKlC,QAAQ,KAAR,CADM;AAEXmC,UAAMnC,QAAQ,MAAR;AAFK","file":"request.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["function request(method) {\n    // const app = JSON.parse(kf.getHeadParams())\n    let app = null\n    if (typeof kf === 'object') {\n        app = JSON.parse(kf.getHeadParams())\n    } else {\n        app = {\n            imei: ''\n            // imei: 'b6cd800a-8c39-3547-a752-061e7b5ac784'\n        }\n    }\n    return function(url, headers = {}, data) {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.withCredentials = true\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    if (xhr.status === 200) {\n                        var response = xhr.responseText;\n                        let res = JSON.parse(response)\n                        if (res.resultCode === 0) {\n                            resolve(res)\n                        } else {\n                            reject(res.resultMsg)\n                        }\n                    } else {\n                        reject(xhr.responseText)\n                    }\n                }\n            };\n            xhr.open(method, url, true)\n            xhr.setRequestHeader('imei', app.imei)\n            let keys = Object.getOwnPropertyNames(headers)\n            keys.forEach(key => {\n                xhr.setRequestHeader(key, headers[key])\n            })\n            \n            if (data) {\n                xhr.send(JSON.stringify(data))\n            } else {\n                xhr.send();\n            }\n        })\n    }\n}\n\nexport default {\n    get: request('GET'),\n    post: request('POST')\n}"]}